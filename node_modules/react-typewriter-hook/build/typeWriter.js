"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TypeWritter = /** @class */ (function () {
    function TypeWritter() {
        this.dummyQueue = [];
        this.eventQueue = [];
        // this.initTaskQueue()
    }
    TypeWritter.prototype.restartTypeWriter = function () {
        this.memoWord = this.nextWord;
        this.eventQueue = this.nextWord ? this.nextWord.split('') : [];
        this.erasing = false;
        return '';
    };
    /**
     * Main process function
     * typing
     *    |-- writing
     *    |-- erasing
     *    |-- restartWrite
     *
     * @returns
     * @memberof TypeWritter
     */
    TypeWritter.prototype.typing = function () {
        // earsing to last character, start write next word
        if (this.erasing && !this.word) {
            return this.restartTypeWriter();
        }
        // earsing
        if (this.erasing && this.word) {
            return this.erase();
        }
        // write end
        if (this.word === this.memoWord) {
            return this.word;
        }
        // writing
        var el = this.eventQueue.shift();
        this.dummyQueue.push(el);
        this.word = this.dummyQueue.join('');
        return this.word;
    };
    TypeWritter.prototype.startTypeWord = function (str) {
        this.erasing = true;
        this.nextWord = str;
        this.dummyQueue.pop();
        this.word = this.dummyQueue.join('');
        return this.word;
    };
    TypeWritter.prototype.erase = function () {
        this.dummyQueue.pop();
        this.word = this.dummyQueue.join('');
        return this.word;
    };
    TypeWritter.prototype.rd = function () {
        var r = Math.random();
        return r > 0.1 || r < 0.07
            ? this.rd()
            : r * 1000;
    };
    return TypeWritter;
}());
exports.default = TypeWritter;
//# sourceMappingURL=typeWriter.js.map