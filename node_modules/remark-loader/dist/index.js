"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = loader;

var _frontMatter = _interopRequireDefault(require("front-matter"));

var _remark = _interopRequireDefault(require("remark"));

var _vfileReporter = _interopRequireDefault(require("vfile-reporter"));

var _options = _interopRequireDefault(require("./options.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loader(content) {
  const options = this.getOptions(_options.default);
  const remarkOptions = typeof options.remarkOptions !== "undefined" ? options.remarkOptions : {};
  const processor = (0, _remark.default)();

  if (typeof remarkOptions.plugins !== "undefined") {
    for (const item of remarkOptions.plugins) {
      if (Array.isArray(item)) {
        const [plugin, pluginOptions] = item;
        processor.use(plugin, pluginOptions);
      } else {
        processor.use(item);
      }
    }
  }

  if (typeof remarkOptions.settings !== "undefined") {
    processor.use({
      settings: remarkOptions.settings
    });
  }

  if (typeof remarkOptions.data !== "undefined") {
    processor.data(remarkOptions.data);
  }

  const removeFrontMatter = typeof options.removeFrontMatter !== "undefined" ? options.removeFrontMatter : true;
  const callback = this.async();

  try {
    processor.process(removeFrontMatter ? (0, _frontMatter.default)(content).body : content, (error, file) => {
      if (error) {
        callback((0, _vfileReporter.default)(error));
        return;
      }

      callback(null, file.contents);
    });
  } catch (error) {
    callback(error);
  }
}