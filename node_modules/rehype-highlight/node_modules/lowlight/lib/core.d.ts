export namespace lowlight {
  export {highlight}
  export {highlightAuto}
  export {registerLanguage}
  export {listLanguages}
  export {registerAlias}
}
export type Text = import('hast').Text
export type HighlightResult = import('highlight.js').HighlightResult
export type HighlightOptions = import('highlight.js').HLJSOptions
export type HighlightSyntax = import('highlight.js').LanguageFn
export type HighlightEmitter = import('highlight.js').Emitter
export type LowlightElementSpan = {
  type: 'element'
  tagName: 'span'
  properties: {
    className: Array<string>
  }
  children: Array<LowlightElementSpan | Text>
}
export type LowlightRoot = {
  type: 'root'
  data: {
    language: string
    relevance: number
  }
  children: Array<LowlightElementSpan | Text>
}
export type ExtraAutoOptions = {
  /**
   * List of allowed languages; defaults to all registered languages
   */
  subset?: Array<string>
}
export type LowlightOptions = {
  /**
   * Class prefix
   */
  prefix?: string
}
export type LowlightAutoOptions = LowlightOptions & ExtraAutoOptions
/**
 * Parse `value` (code) according to the `language` (name) grammar.
 *
 * @param {string} language Language name
 * @param {string} value Code value
 * @param {LowlightOptions} [options={}] Settings
 * @returns {LowlightRoot}
 */
declare function highlight(
  language: string,
  value: string,
  options?: LowlightOptions
): LowlightRoot
/**
 * Parse `value` (code) by guessing its grammar.
 *
 * @param {string} value Code value
 * @param {LowlightAutoOptions} [options={}] Settings
 * @returns {LowlightRoot}
 */
declare function highlightAuto(
  value: string,
  options?: LowlightAutoOptions
): LowlightRoot
/**
 * Register a language.
 *
 * @param {string} language Language name
 * @param {HighlightSyntax} syntax Language syntax
 * @returns {void}
 */
declare function registerLanguage(
  language: string,
  syntax: HighlightSyntax
): void
/**
 * Get a list of all registered languages.
 *
 * @returns {Array.<string>}
 */
declare function listLanguages(): Array<string>
declare const registerAlias: ((
  language: string,
  alias: string | Array<string>
) => void) &
  ((aliases: {[x: string]: string | Array<string>}) => void)
export {}
